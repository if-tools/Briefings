@page "/find"
@using IFToolsBriefings.Client.Services
@using IFToolsBriefings.Shared.Data.Types

@inject CurrentPage CurrentPage
@inject NavigationManager NavManager

<h2 class="mobile-page-title">@CurrentPage.CurrentPageName</h2>

<div class="wrapper">
    <div class="section-left">
        <div class="data-input">
            <div class="method-box">
                <span class="input-name">Search method</span>
                <select class="method-select" @bind="_searchMethod">
                    <option value="@(BriefingSearchMethod.ByAuthor)">By Author</option>
                    <option value="@(BriefingSearchMethod.ByOrigin)">By Origin Airport</option>
                    <option value="@(BriefingSearchMethod.ByDestination)">By Destination Airport</option>
                </select>
            </div>
            <div class="query-box">
                <span class="input-name">Search query</span>
                <input class="query-input" @bind="_searchQuery" placeholder="Enter your search query.">
            </div>
            <button class="btn btn-primary" @onclick="SearchBriefings">Show</button>
        </div>
    </div>
    <div class="section-right">
        <h4 class="section-title">Result <LoadingIndicator IsShown="_showLoadingIndicator" AddLeftMargin="true"></LoadingIndicator></h4>
        <div class="result">
            @if(_resultDisplayed)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Route</th>
                            <th>Author</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var briefing in _briefings)
                    {
                        <tr class="clickable" @onclick="() => NavigateToBriefing(briefing.Id)">
                            <td>@($"{briefing.Origin} - {briefing.Destination}")</td>
                            <td>@(briefing.Author.Trim().Length == 0 ? "Anonymous" : briefing.Author)</td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <p class="nothing-displayed">There's nothing to show here.</p>
            }
            </div>
    </div>
</div>

@code {
    
    BriefingSearchMethod _searchMethod = 0;
    string _searchQuery = "";

    bool _resultDisplayed;
    bool _showLoadingIndicator;
    
    List<Briefing> _briefings;

    protected override void OnInitialized()
    {
        CurrentPage.SetCurrentPageName("Find Briefing");
        
        base.OnInitialized();
    }

    private void SearchBriefings()
    {
        if (_searchQuery.Trim() == "")
        {
            CurrentPage.ShowNotification("Query is empty.");
            return;
        }

        GetAndDisplaySearchResults();
    }

    private async void GetAndDisplaySearchResults()
    {
        _showLoadingIndicator = true;
        StateHasChanged();

        var briefings = await ApiService.GetBriefings(_searchMethod, _searchQuery);

        if (briefings == null)
        {
            CurrentPage.ShowNotification("Error fetching data.");
            _showLoadingIndicator = false;
            _resultDisplayed = false;
            StateHasChanged();

            return;
        }
        
        _briefings = briefings.ToList();
        
        if (_briefings.Count <= 0)
        {
            CurrentPage.ShowNotification("No such briefing found.");
            _showLoadingIndicator = false;
            _resultDisplayed = false;
            StateHasChanged();

            return;
        }

        _resultDisplayed = true;
        _showLoadingIndicator = false;
        
        StateHasChanged();
    }

    private void NavigateToBriefing(int id)
    {
        NavManager.NavigateTo($"/b/{id}");
    }

}